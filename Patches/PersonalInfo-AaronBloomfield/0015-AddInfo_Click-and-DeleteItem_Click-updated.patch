From f77556ab8273a9e136f042b29075c41fc3d65a8b Mon Sep 17 00:00:00 2001
From: Aaron Bloomfield <azzabloom@gmail.com>
Date: Mon, 25 Sep 2017 19:43:33 +0930
Subject: [PATCH 15/18] AddInfo_Click and DeleteItem_Click updated

---
 .../InstaRichie/Views/PersonalInfoPage.xaml        |  93 ++++++++-------
 .../InstaRichie/Views/PersonalInfoPage.xaml.cs     | 126 ++++++++++++++++++---
 2 files changed, 167 insertions(+), 52 deletions(-)

diff --git a/Start-Finance-master/InstaRichie/Views/PersonalInfoPage.xaml b/Start-Finance-master/InstaRichie/Views/PersonalInfoPage.xaml
index 6235488..0d226db 100644
--- a/Start-Finance-master/InstaRichie/Views/PersonalInfoPage.xaml
+++ b/Start-Finance-master/InstaRichie/Views/PersonalInfoPage.xaml
@@ -1,4 +1,20 @@
-﻿<Page
+﻿<!--
+    Start Finance - An to manage your personal finances.
+    Copyright (C) 2016  Jijo Bose
+    Start Finance is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+    Start Finance is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+    You should have received a copy of the GNU General Public License
+    along with Start Finance.  If not, see <http://www.gnu.org/licenses/>.
+
+-->
+
+<Page
     x:Class="StartFinance.Views.PersonalInfoPage"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
@@ -6,11 +22,15 @@
     xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
     xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
     xmlns:controls="using:Template10.Controls"
-    xmlns:local="using:StartFinance.Views"
     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
+    xmlns:local="using:StartFinance.Views"
     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
-    xmlns:vm="using:StartFinance.ViewModels"
-    mc:Ignorable="d" Width="437.244">
+    Loaded="Page_Loaded"
+    xmlns:vm="using:StartFinance.ViewModels" mc:Ignorable="d">
+
+    <Page.DataContext>
+        <vm:MainPageViewModel x:Name="ViewModel" />
+    </Page.DataContext>
 
     <Page.Resources>
         <DataTemplate x:Key="PersonalInfoView">
@@ -20,16 +40,14 @@
                     <TextBlock Text="{Binding FirstName}" Padding="0,0,15,0"/>
                     <TextBlock Text="{Binding LastName}" Padding="0,0,15,0"/>
                     <TextBlock Text="{Binding Email}" Padding="0,0,15,0"/>
-                    <TextBlock Text="{Binding Phone}"/>
+                    <TextBlock Text="{Binding Phone}" Padding="0,0,15,0"/>
+                    <TextBlock Text="{Binding Gender}" Padding="0,0,15,0"/>
+                    <TextBlock Text="{Binding DOB}"/>
                 </StackPanel>
             </Grid>
         </DataTemplate>
     </Page.Resources>
 
-    <Page.DataContext>
-        <vm:MainPageViewModel x:Name="ViewModel" />
-    </Page.DataContext>
-
     <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
 
         <VisualStateManager.VisualStateGroups>
@@ -40,6 +58,7 @@
                     </VisualState.StateTriggers>
                     <VisualState.Setters>
                         <!--  TODO: change properties for narrow view  -->
+                        <!--<Setter Target="stateTextBox.Text" Value="Narrow Visual State" />-->
                     </VisualState.Setters>
                 </VisualState>
                 <VisualState x:Name="VisualStateNormal">
@@ -48,6 +67,7 @@
                     </VisualState.StateTriggers>
                     <VisualState.Setters>
                         <!--  TODO: change properties for normal view  -->
+                        <!--<Setter Target="stateTextBox.Text" Value="Normal Visual State" />-->
                     </VisualState.Setters>
                 </VisualState>
                 <VisualState x:Name="VisualStateWide">
@@ -55,15 +75,16 @@
                         <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                     </VisualState.StateTriggers>
                     <VisualState.Setters>
-                        
+                        <!--  TODO: change properties for wide view  -->
+                        <!--<Setter Target="stateTextBox.Text" Value="Wide Visual State" />-->
                     </VisualState.Setters>
                 </VisualState>
             </VisualStateGroup>
         </VisualStateManager.VisualStateGroups>
 
         <controls:PageHeader x:Name="pageHeader" RelativePanel.AlignLeftWithPanel="True"
-			RelativePanel.AlignRightWithPanel="True"
-			RelativePanel.AlignTopWithPanel="True" Text="Personal Information">
+                             RelativePanel.AlignRightWithPanel="True"
+                             RelativePanel.AlignTopWithPanel="True" Text="Add Personal Info">
 
             <!--  secondary commands  -->
             <controls:PageHeader.SecondaryCommands>
@@ -71,59 +92,53 @@
                 <AppBarButton Click="{x:Bind ViewModel.GotoPrivacy}" Label="Privacy" />
                 <AppBarButton Click="{x:Bind ViewModel.GotoAbout}" Label="About" />
             </controls:PageHeader.SecondaryCommands>
+
         </controls:PageHeader>
 
         <controls:PageHeader x:Name="pageFooter" RelativePanel.AlignLeftWithPanel="True"
-			RelativePanel.AlignRightWithPanel="True"
-			RelativePanel.AlignBottomWithPanel="True">
+                             RelativePanel.AlignRightWithPanel="True"
+                             RelativePanel.AlignBottomWithPanel="True">
 
             <!--  secondary commands  -->
             <controls:PageHeader.PrimaryCommands>
-                <AppBarButton Icon="Add" Label="Add Info" Click="AppBarButton_Click"/>
-                <AppBarButton Icon="Edit" Label="Edit Info" Click="EditItem_Click"/>
-                <AppBarButton Icon="Delete" Label="Delete Info" Click="DeleteItem_Click"/>
+                <AppBarButton x:Name="add" Icon="Add" Label="Add Info" Click="AddInfo_Click"/>
+                <AppBarButton x:Name="edit" Icon="Edit" Label="Edit Info" Click="EditItem_Click"/>
+                <AppBarButton x:Name="delete" Icon="Delete" Label="Delete Info" Click="DeleteItem_Click"/>
+                <AppBarButton x:Name="accept" Icon="Accept" Label="Accept Change" Click="AcceptChange_Click" Visibility="Collapsed"/>
             </controls:PageHeader.PrimaryCommands>
-        </controls:PageHeader>
 
+        </controls:PageHeader>
 
-        <Pivot Margin="0,0,0.2,0">
+        <!--Page Conetents start here-->
+        <Pivot Grid.Row="1" x:Name="pagecontent">
             <RelativePanel.Below>pageHeader</RelativePanel.Below>
             <RelativePanel.Above>pageFooter</RelativePanel.Above>
-            <PivotItem Header="Information">
+            <PivotItem Header="Personal Info">
                 <Grid>
-                    <Grid.RowDefinitions>
-                        <RowDefinition Height="185"/>
-                        <RowDefinition Height="189*"/>
-                        <RowDefinition Height="250*"/>
-                    </Grid.RowDefinitions>
-                    <StackPanel x:Name="PageStart" Grid.Row="0" VerticalAlignment="Top"
-                        HorizontalAlignment="Stretch"
-                        Orientation="Vertical" Margin="10,5,10,0" Grid.RowSpan="2">
+                    <StackPanel Grid.Row="1" VerticalAlignment="Top" Orientation="Vertical" Margin="10,5,10,0">
                         <StackPanel x:Name="fullName" Orientation="Horizontal">
-                            <TextBox x:Name="fName" Header="First Name" PlaceholderText="John" TextWrapping="Wrap" />
-                            <TextBox x:Name="lName" Header="Last Name" PlaceholderText="Smith" TextWrapping="Wrap" />
+                            <TextBox x:Name="fName" Header="First Name" PlaceholderText="John" TextWrapping="Wrap" MinWidth="194" />
+                            <TextBox x:Name="lName" Header="Last Name" PlaceholderText="Smith" TextWrapping="Wrap" MinWidth="194" />
                         </StackPanel>
                         <StackPanel x:Name="details" Orientation="Horizontal">
-                            <TextBox x:Name="email" Header="Email Address" InputScope="EmailNameOrAddress" PlaceholderText="jsmith@gmail.com" TextWrapping="Wrap"/>
-                            <TextBox x:Name="phone" Header="Phone Number" InputScope="TelephoneNumber" PlaceholderText="0400111222" TextWrapping="Wrap"/>
+                            <TextBox x:Name="email" Header="Email Address" InputScope="EmailNameOrAddress" PlaceholderText="jsmith@gmail.com" TextWrapping="Wrap" MinWidth="194"/>
+                            <TextBox x:Name="phone" Header="Phone Number" InputScope="TelephoneNumber" PlaceholderText="0400111222" TextWrapping="Wrap" MinWidth="194"/>
                         </StackPanel>
                         <StackPanel x:Name="gender" Orientation="Horizontal">
-                            <TextBlock Text="Gender" />
-                            <RadioButton x:Name="RadBtnM" Content="Male" Tag="male" GroupName="gen" Width="80" IsChecked="True" MinWidth="80" Checked="RadBtnM_Checked" />
-                            <RadioButton x:Name="radBtnF" Content="Female" Tag="female" GroupName="gen" Width="80" MinWidth="80" Checked="RadBtnF_Checked" />
+                            <TextBlock Text="Gender" MinWidth="80" />
+                            <RadioButton x:Name="RadBtnM" Content="Male" Tag="male" GroupName="gen" Width="80" MinWidth="80" />
+                            <RadioButton x:Name="RadBtnF" Content="Female" Tag="female" GroupName="gen" Width="80" MinWidth="80" />
                         </StackPanel>
                         <StackPanel x:Name="birth" Orientation="Horizontal">
-                            <CalendarDatePicker x:Name="dob" Header="DOB"/>
+                            <CalendarDatePicker x:Name="dob" Header="DOB" MinWidth="388"/>
                         </StackPanel>
-                        
                     </StackPanel>
                     <ListView x:Name="InfoList" ItemTemplate="{StaticResource PersonalInfoView}"
-                              HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0,0,0,10" Grid.Row="1" Height="200" Grid.RowSpan="2">
+                              HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0,0,0,10" Grid.Row="1" Height="300" Grid.RowSpan="2">
                         <RelativePanel.Below>PageStart</RelativePanel.Below>
                     </ListView>
                 </Grid>
             </PivotItem>
         </Pivot>
-
     </RelativePanel>
 </Page>
diff --git a/Start-Finance-master/InstaRichie/Views/PersonalInfoPage.xaml.cs b/Start-Finance-master/InstaRichie/Views/PersonalInfoPage.xaml.cs
index b18e67d..5b8e1ac 100644
--- a/Start-Finance-master/InstaRichie/Views/PersonalInfoPage.xaml.cs
+++ b/Start-Finance-master/InstaRichie/Views/PersonalInfoPage.xaml.cs
@@ -40,6 +40,28 @@ namespace StartFinance.Views
             Results();
         }
 
+        public string FinalDate()
+        {
+            string CDay = dob.Date.Value.Day.ToString();
+            string CMonth = dob.Date.Value.Month.ToString();
+            string CYear = dob.Date.Value.Year.ToString();
+            string EndDate = "" + CDay + "/" + CMonth + "/" + CYear;
+
+            return EndDate;
+        }
+
+        public void ClearAll()
+        {
+            fName.Text = "";
+            lName.Text = "";
+            email.Text = "";
+            phone.Text = "";
+            RadBtnM.IsChecked = false;
+            RadBtnF.IsChecked = false;
+            dob.Date = null;
+
+        }
+
         public void Results()
         {
             // Creating table
@@ -48,12 +70,22 @@ namespace StartFinance.Views
             InfoList.ItemsSource = query.ToList();
         }
 
-        private void RadBtnF_Checked(object sender, RoutedEventArgs e) => sex = "Female";
-
-        private void RadBtnM_Checked(object sender, RoutedEventArgs e) => sex = "Male";
+        private string DetSex()
+        {
+            if (RadBtnM.IsChecked == true)
+            {
+                sex = "Male";
+            }
+            else if (RadBtnF.IsChecked == true)
+            {
+                sex = "Female";
+            }
+            return sex;
+        }
 
-        private async void AppBarButton_Click(object sender, RoutedEventArgs e)
+        private async void AddInfo_Click(object sender, RoutedEventArgs e)
         {
+
             try
             {
                 // checks if anything is null
@@ -77,7 +109,12 @@ namespace StartFinance.Views
                     MessageDialog dialog = new MessageDialog("Phone Number not Entered", "Oops..!");
                     await dialog.ShowAsync();
                 }
-                else if (dob.CalendarIdentifier.ToString() == "")
+                else if (DetSex() == "")
+                {
+                    MessageDialog dialog = new MessageDialog("Gender not Selected", "Oops..!");
+                    await dialog.ShowAsync();
+                }
+                else if (dob.Date.ToString() == "")
                 {
                     MessageDialog dialog = new MessageDialog("Date of Birth not Selected", "Oops..!");
                     await dialog.ShowAsync();
@@ -90,12 +127,14 @@ namespace StartFinance.Views
                         LastName = lName.Text,
                         Email = email.Text,
                         Phone = phone.Text,
-                        DOB = dob.ToString(),
-                        Gender = sex
+                        DOB = FinalDate(),
+                        Gender = DetSex().ToString()
                     });
                     Results();
                 }
 
+                ClearAll();
+
             }
             catch (Exception ex)
             {   // Exception to display when email i not valid or numbers not entered for phone
@@ -135,21 +174,34 @@ namespace StartFinance.Views
             var result = await ShowConf.ShowAsync();
             if ((int)result.Id == 0)
             {
-                // checks if data is null else inserts
+                pageHeader.PrimaryCommands.Remove(add);
+                pageHeader.PrimaryCommands.Remove(edit);
+                pageHeader.PrimaryCommands.Remove(delete);
+                accept.Visibility = Visibility.Visible;
+
+                DateTime birthDate = DateTime.Parse(((PersonalInfo)InfoList.SelectedItem).DOB);
+
                 try
                 {
                     fName.Text = ((PersonalInfo)InfoList.SelectedItem).FirstName;
                     lName.Text = ((PersonalInfo)InfoList.SelectedItem).LastName;
                     email.Text = ((PersonalInfo)InfoList.SelectedItem).Email;
                     phone.Text = ((PersonalInfo)InfoList.SelectedItem).Phone;
-                    dob.DateFormat = ((PersonalInfo)InfoList.SelectedItem).DOB;
+                    this.dob.Date = birthDate;
+                    if (DetSex() == "Male")
+                    {
+                        RadBtnM.IsChecked = true;
+                    }
+                    else
+                    {
+                        RadBtnF.IsChecked = true;
+                    }
 
-                    //var querydel = conn.Query<PersonalInfo>("DELETE FROM PersonalInfo WHERE FirstName = '" + first + "' and LastName = '" + last + "'");
                     Results();
                 }
                 catch (NullReferenceException)
                 {
-                    MessageDialog ClearDialog = new MessageDialog("Please select the item to Delete", "Oops..!");
+                    MessageDialog ClearDialog = new MessageDialog("Please select the item to Edit", "Oops..!");
                     await ClearDialog.ShowAsync();
                 }
             }
@@ -182,12 +234,16 @@ namespace StartFinance.Views
             var result = await ShowConf.ShowAsync();
             if ((int)result.Id == 0)
             {
-                // checks if data is null else inserts
+                
+
                 try
                 {
                     string first = ((PersonalInfo)InfoList.SelectedItem).FirstName;
                     string last = ((PersonalInfo)InfoList.SelectedItem).LastName;
-                    var querydel = conn.Query<PersonalInfo>("DELETE FROM PersonalInfo WHERE FirstName = '" + first + "' and LastName = '" + last + "'");
+                    string birth = ((PersonalInfo)InfoList.SelectedItem).DOB;
+
+                    var querydel = conn.Query<PersonalInfo>("DELETE FROM PersonalInfo WHERE FirstName = '" + first + 
+                        "' and LastName = '" + last + "' and DOB = '" + birth + "'");
                     Results();
                 }
                 catch (NullReferenceException)
@@ -201,5 +257,49 @@ namespace StartFinance.Views
                 //
             }
         }
+
+        private async void AcceptChange_Click(object sender, RoutedEventArgs e)
+        {
+            MessageDialog ShowConf = new MessageDialog("Do you wish to accept changes?", "Important");
+            ShowConf.Commands.Add(new UICommand("Yes, Accept")
+            {
+                Id = 0
+            });
+            ShowConf.Commands.Add(new UICommand("Cancel")
+            {
+                Id = 1
+            });
+            ShowConf.DefaultCommandIndex = 0;
+            ShowConf.CancelCommandIndex = 1;
+
+            var result = await ShowConf.ShowAsync();
+            if ((int)result.Id == 0)
+            {
+
+
+                try
+                {
+                    conn.Insert(new PersonalInfo()
+                    {
+                        FirstName = fName.Text,
+                        LastName = lName.Text,
+                        Email = email.Text,
+                        Phone = phone.Text,
+                        DOB = FinalDate(),
+                        Gender = DetSex().ToString()
+                    });
+                    Results();
+                }
+                catch (NullReferenceException)
+                {
+                    MessageDialog ClearDialog = new MessageDialog("Please select the item to Edit", "Oops..!");
+                    await ClearDialog.ShowAsync();
+                }
+            }
+            else
+            {
+                //
+            }
+        }
     }
 }
\ No newline at end of file
-- 
2.11.0.windows.1

